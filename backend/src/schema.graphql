# import * from './generated/prisma.graphql'

# this file represents _what_ actions (queries/mutations) the prisma server application _can_ do.
# it does not define _how_ the server will do perform those actions
# those behaviors are defined by Query.js and Mutation.js


type User {
  id: ID!
  name: String!
  email: String!
  combinations: [Combination]
}

input CombinationInput {
  id: ID!
}

# the ID of the technique to `connect` with in the mutation
input TechniqueInput {
  id: ID!
}

input CombinationTechniqueInput {
  technique: TechniqueInput
}

type Mutation {
  createUser(name: String! email: String!): User
  updateUser(id: ID! name: String email: String! combinations: [CombinationInput]): User!
  deleteUser(id: ID!): User
  createTechnique(name: String! description: String rank: Rank): Technique
  updateTechnique(id: ID! name: String description: String rank: Rank): Technique!
  deleteTechnique(id: ID!): Technique
  createCombination(
    name: String
    numTechniques: Int
    maxRank: Rank
    combinationTechniques: [CombinationTechniqueInput]
  ): Combination
  updateCombination(
    id: ID!
    name: String
    maxRank: Rank
    combinationTechniques: [CombinationTechniqueInput]
  ): Combination

  deleteCombination(id: ID!): Combination
}

type Query {
  users: [User]!
  techniques: [Technique]!
  combinations: [Combination]!
  user(where: UserWhereUniqueInput!): User
  technique(where: TechniqueWhereUniqueInput!): Technique
  combination(where: CombinationWhereUniqueInput!): Combination
}